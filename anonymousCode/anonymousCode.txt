Blob myDataBlob = Blob.valueOf('my text to convert');
System.debug(myDataBlob);

Object myData = 1618;
Object myDataString = '1618';
Integer myIntegerData = (Integer)myData;
String myStringData = (String)myDataString;
System.debug(myIntegerData);
System.debug(myStringData);

enum Direction {NORTH, SOUTH, EAST, WEST}
Direction north = Direction.NORTH;
Direction north1 = Direction.NORTH;
System.debug(north);
System.debug(north1);
System.assertEquals(NORTH, north);

Double x = 12.4 - 3.3;
Double y = 12.4 - 3.3;

Integer x2 = 20 / 3;
System.debug(x2);

Double y2 = 20.0 / 3;
System.debug(y2);

Double y3 = 5.0 / 2;
System.debug(y3);

helloWorld.helloWorld();
System.debug(helloWorld.x);
helloWorld hw = new helloWorld();
System.debug(hw.y);

polymorphicShapes.printArea(new rectangle(3,6));

List<AggregateResult> results = [SELECT COUNT(Id) number FROM Account];
System.debug(results[0].get('number'));



// sorting list
List<String> colors = new List<String>{ 'Yellow', 'Red', 'Green' };
colors.sort(); // Sorts list of string alphabetically
System.debug(colors); // (Green, Red, Yellow)

// sort accounts
List<Account> accounts = [SELECT Id, Name, ShippingCountry FROM Account LIMIT 4];
System.debug('before sort: ' + accounts);
System.debug('list size: ' + accounts.size());
SortableAccount.sort(accounts);
System.debug('after sort: ' + accounts);


